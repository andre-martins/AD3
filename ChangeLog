2018-09-26 AD3 2.2.1 vlad@vene.ro
  * Support for python 3.7

2017-06-20 AD3 2.2.0 vlad@vene.ro
  * Added 2 capabilities to the Python wrapper:
    - handling logic constraints
    - handling multiple types of nodes (the node type defines the list of possible states of the node)
    - handling both multi-type and constraints
    Added the corresponding unit tests.
    by Jean-Luc Meunier  (jean-luc.meunier@naverlabs.com).

  * Refactoring and better importing for the Python wrapper:
    - It is now possible to build custom factors in user libraries and wrap
	them, without modifying AD3 itself.

  * Exposing more functionality and settings:
    - Exposed the underlying quadratic problem solvers to Python.
	- Allow access to intermediate results of the QP solvers.
	- Allow users to disable auto-clearing the QP solver cache.
  
2017-07-31 AD3 2.1.0 vlad@vene.ro
  Added some functionality and robustness to the Python wrapper:
  * Factor graphs now have verbosity=0 by default (in CPP as well.)
  * `create_factor_*` can now take `negated=None` for simplicity.
    Note: To allow this, the order of arguments in `create_factor_budget` and
   `create_factor_knapsack` was changed.
  * Add `PFactorGraph.solve` unified API for setting solver settings.
  * Make `PMultiVariable` objects friendlier with len, get/setitem,
    as well as `set_log_potentials` with a numpy array instead of a loop.
  * Add validation and bounds checking to variables and some factors, preventing
    many ways in which user error can lead to segfaults.
  * More examples and test coverage, all with Python 3 support.

  As of this release, AD3 is distibuted on pypi as binary wheels, simplifying
  the installation process.

2013-03-22 AD3 2.0.2 afm@cs.cmu.edu
  Fixed memory leak in generic factors due to some configurations not being
  deleted.

2012-10-10 AD3 2.0.1 afm@cs.cmu.edu
  Fixed initialization of STL vectors which was causing problems
  in some compilers.

2012-09-09 AD3 2.0 afm@cs.cmu.edu
  New release with major modifications:
  * Ability of handling dense, sparse, and combinatorial factors,
    with binary or multi-valued variables.
  * Active set method for solving the AD3 subproblems.
  * Ability of handling user-defined factors.
  * Parses UAI files.
  * Can be compiled as a library.

2012-06-01 AD3 1.0 afm@cs.cmu.edu
  Initial implementation.
